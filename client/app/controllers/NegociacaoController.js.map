{"version":3,"sources":["../../app-src/controllers/NegociacaoController.js"],"names":["Negociacoes","NegociacaoService","Negociacao","NegociacoesView","MensagemView","Mensagem","DataInvalidaException","DateConverter","getNegociacaoDao","Bind","NegociacaoController","constructor","$","document","querySelector","bind","_inputData","_inputQuantidade","_inputValor","_negociacoes","_mensagem","_service","_init","then","dao","listaTodos","negociacoes","forEach","negociacao","adiciona","catch","err","texto","event","preventDefault","_criaNegociacao","_limpaFormulario","console","log","stack","message","value","focus","paraData","parseInt","parseFloat","apaga","apagaTodos","esvazia","importaNegociacoes","Promise","all","obtemNegociacoesDaSemana","obtemNegociacoesDaSemanaAnterior","obtemNegociacoesDaSemanaRetrasada","periodo","reduce","novoArray","item","concat","obtemNegociacoesDoPeriodo","Error","filter","novaNegociacao","paraArray","some","negociacaoExistente","equals"],"mappings":"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","file":"NegociacaoController.js","sourcesContent":["import { Negociacoes, NegociacaoService, Negociacao } from '../domain/index.js';\r\nimport {\r\n    NegociacoesView, MensagemView, Mensagem, DataInvalidaException, DateConverter\r\n} from '../ui/index.js';\r\nimport { getNegociacaoDao, Bind } from '../util/index.js';\r\n\r\nexport class NegociacaoController {\r\n\r\n    constructor() {\r\n        //é uma copia da função querySelector, por referência, mantendo o contexto (document). \r\n        const $ = document.querySelector.bind(document);\r\n\r\n        // buscando os elementos\r\n        this._inputData = $('#data');\r\n        this._inputQuantidade = $('#quantidade');\r\n        this._inputValor = $('#valor');\r\n\r\n        this._negociacoes = new Bind(\r\n            new Negociacoes(),\r\n            new NegociacoesView('#negociacoes'),\r\n            'adiciona', 'esvazia'\r\n        );\r\n\r\n        this._mensagem = new Bind(\r\n            new Mensagem(),\r\n            new MensagemView('#mensagemView'),\r\n            'texto'\r\n        );\r\n\r\n        this._service = new NegociacaoService();\r\n        this._init();\r\n    }\r\n\r\n    _init() {\r\n        getNegociacaoDao()\r\n            .then(dao => dao.listaTodos())\r\n            .then(negociacoes =>\r\n                negociacoes.forEach(negociacao =>\r\n                    this._negociacoes.adiciona(negociacao)))\r\n            .catch(err => this._mensagem.texto = err);\r\n    }\r\n\r\n    adiciona(event) {\r\n\r\n        try {\r\n\r\n            event.preventDefault();\r\n            const negociacao = this._criaNegociacao();\r\n\r\n            getNegociacaoDao()\r\n                .then(dao => dao.adiciona(negociacao))\r\n                .then(() => {\r\n                    // só tentará incluir na tabela se conseguiu antes incluir no banco\r\n                    this._negociacoes.adiciona(negociacao);\r\n                    this._mensagem.texto = 'Negociação\tadicionada\tcom sucesso';\r\n                    this._limpaFormulario();\r\n                })\r\n                .catch(err => this._mensagem.texto = err);\r\n\r\n        } catch (err) {\r\n\r\n            console.log(err);\r\n            console.log(err.stack);\r\n\r\n            if (err instanceof DataInvalidaException) {\r\n                this._mensagem.texto = err.message;\r\n            } else {\r\n                // mensagem genérica para qualquer problema que possa acontecer \r\n                this._mensagem.texto = 'Um erro não esperado aconteceu. Entre em contato com o suporte';\r\n            }\r\n        }\r\n    }\r\n\r\n    _limpaFormulario() {\r\n        this._inputData.value = '';\r\n        this._inputQuantidade.value = 1;\r\n        this._inputValor.value = 0.0\r\n        this._inputData.focus();\r\n    }\r\n\r\n    _criaNegociacao() {\r\n        // retorna uma instância de negociação\r\n        return new Negociacao(\r\n            DateConverter.paraData(this._inputData.value),\r\n            parseInt(this._inputQuantidade.value),\r\n            parseFloat(this._inputValor.value)\r\n        );\r\n    }\r\n\r\n    apaga() {\r\n        getNegociacaoDao()\r\n            .then(dao => dao.apagaTodos())\r\n            .then(() => {\r\n                this._negociacoes.esvazia();\r\n                this._mensagem.texto = 'Negociações apagadas com sucesso';\r\n            })\r\n            .catch(err => this._mensagem.texto = err);\r\n    }\r\n\r\n    importaNegociacoes() {\r\n\r\n        Promise.all([\r\n            this._service.obtemNegociacoesDaSemana(),\r\n            this._service.obtemNegociacoesDaSemanaAnterior(),\r\n            this._service.obtemNegociacoesDaSemanaRetrasada()\r\n\r\n        ]).then(periodo => {\r\n            periodo\r\n                .reduce((novoArray, item) => novoArray.concat(item), [])\r\n                .forEach(negociacao => this._negociacoes.adiciona(negociacao));\r\n            this._mensagem.texto = 'Negociações importadas com sucesso';\r\n        }).catch(err => {\r\n            this._mensagem.texto = err;\r\n        });\r\n    }\r\n\r\n    obtemNegociacoesDoPeriodo() {\r\n        // ACESSA AOS PRÓPRIOS MÉTODOS ATRAVÉS DE THIS\r\n        return Promise.all([\r\n            this.obtemNegociacoesDaSemana(),\r\n            this.obtemNegociacoesDaSemanaAnterior(),\r\n            this.obtemNegociacoesDaSemanaRetrasada()\r\n        ]).then(periodo => {\r\n            // NÃO FAZ MAIS O FOREACH \r\n            return periodo\r\n                .reduce((novoArray, item) => novoArray.concat(item), []);\r\n        }).catch(err => {\r\n            console.log(err);\r\n            throw new Error('Não foi possível obter as negociações do período')\r\n        });\r\n    }\r\n\r\n    importaNegociacoes() {\r\n\r\n        this._service\r\n            .obtemNegociacoesDoPeriodo()\r\n            .then(negociacoes => {\r\n                negociacoes.filter(novaNegociacao =>\r\n                    !this._negociacoes.paraArray().some(negociacaoExistente => novaNegociacao\r\n                        .equals(negociacaoExistente)))\r\n                    .forEach(negociacao => this._negociacoes.adiciona(negociacao));\r\n                this._mensagem.texto = 'Negociações do período importadas com sucesso';\r\n            })\r\n            .catch(err => this._mensagem.texto = err);\r\n    }\r\n}"]}