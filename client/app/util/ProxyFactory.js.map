{"version":3,"sources":["../../app-src/util/ProxyFactory.js"],"names":["ProxyFactory","create","objeto","props","armadilha","Proxy","get","target","prop","receiver","_ehFuncao","includes","console","log","apply","arguments","set","value","updated","Reflect","fn","Function"],"mappings":";;;;;;AAAO,kBAAMA,YAAN,CAAmB;;AAEtB,uBAAOC,MAAP,CAAcC,MAAd,EAAsBC,KAAtB,EAA6BC,SAA7B,EAAwC;AACpC;AACA,2BAAO,IAAIC,KAAJ,CAAUH,MAAV,EAAkB;;AAErBI,4BAAIC,MAAJ,EAAYC,IAAZ,EAAkBC,QAAlB,EAA4B;AACxB;AACA;AACA,gCAAIT,aAAaU,SAAb,CAAuBH,OAAOC,IAAP,CAAvB,KAAwCL,MAAMQ,QAAN,CAAeH,IAAf,CAA5C,EAAkE;AAC9D,uCAAO,YAAY;AACfI,4CAAQC,GAAR,CAAa,IAAGL,IAAK,wBAArB;AACAD,2CAAOC,IAAP,EAAaM,KAAb,CAAmBP,MAAnB,EAA2BQ,SAA3B;AACA;AACAX,8CAAUG,MAAV;AACH,iCALD;AAMH,6BAPD,MAOO;AACH,uCAAOA,OAAOC,IAAP,CAAP;AACH;AACJ,yBAfoB;;AAiBrBQ,4BAAIT,MAAJ,EAAYC,IAAZ,EAAkBS,KAAlB,EAAyBR,QAAzB,EAAmC;AAC/B,kCAAMS,UAAUC,QAAQH,GAAR,CAAYT,MAAZ,EAAoBC,IAApB,EAA0BS,KAA1B,CAAhB;AACA;AACA,gCAAId,MAAMQ,QAAN,CAAeH,IAAf,CAAJ,EAA0BJ,UAAUG,MAAV;AAC1B,mCAAOW,OAAP;AACH;AAtBoB,qBAAlB,CAAP;AAwBH;;AAED;AACA,uBAAOR,SAAP,CAAiBU,EAAjB,EAAqB;AACjB,2BAAO,OAAQA,EAAR,IAAe,OAAQC,QAA9B;AACH;AAjCqB","file":"ProxyFactory.js","sourcesContent":["export class ProxyFactory {\n\n    static create(objeto, props, armadilha) {\n        // recebe objeto como parâmetro\n        return new Proxy(objeto, {\n\n            get(target, prop, receiver) {\n                // usa o array props para realizar o includes\n                // USANDO O MÉTODO ESTÁTICO\n                if (ProxyFactory._ehFuncao(target[prop]) && props.includes(prop)) {\n                    return function () {\n                        console.log(`\"${prop}\" disparou a armadilha`);\n                        target[prop].apply(target, arguments);\n                        // executa a armadilha que recebe o objeto original\n                        armadilha(target);\n                    }\n                } else {\n                    return target[prop];\n                }\n            },\n\n            set(target, prop, value, receiver) {\n                const updated = Reflect.set(target, prop, value);\n                // SÓ EXECUTAMOS A ARMADILHA SE FIZER PARTE DA LISTA DE PROPS \n                if (props.includes(prop)) armadilha(target);\n                return updated;\n            }\n        });\n    }\n\n    // NOVO MÉTODO ESTÁTICO\n    static _ehFuncao(fn) {\n        return typeof (fn) == typeof (Function);\n    }\n}\n\n"]}